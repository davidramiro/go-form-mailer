// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
)

func (s *ResponseStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Ref: #/components/schemas/FormData
type FormData struct {
	Name                         string `json:"name"`
	Email                        string `json:"email"`
	Subject                      string `json:"subject"`
	Message                      string `json:"message"`
	FrcMinusCaptchaMinusSolution string `json:"frc-captcha-solution"`
}

// GetName returns the value of Name.
func (s *FormData) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *FormData) GetEmail() string {
	return s.Email
}

// GetSubject returns the value of Subject.
func (s *FormData) GetSubject() string {
	return s.Subject
}

// GetMessage returns the value of Message.
func (s *FormData) GetMessage() string {
	return s.Message
}

// GetFrcMinusCaptchaMinusSolution returns the value of FrcMinusCaptchaMinusSolution.
func (s *FormData) GetFrcMinusCaptchaMinusSolution() string {
	return s.FrcMinusCaptchaMinusSolution
}

// SetName sets the value of Name.
func (s *FormData) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *FormData) SetEmail(val string) {
	s.Email = val
}

// SetSubject sets the value of Subject.
func (s *FormData) SetSubject(val string) {
	s.Subject = val
}

// SetMessage sets the value of Message.
func (s *FormData) SetMessage(val string) {
	s.Message = val
}

// SetFrcMinusCaptchaMinusSolution sets the value of FrcMinusCaptchaMinusSolution.
func (s *FormData) SetFrcMinusCaptchaMinusSolution(val string) {
	s.FrcMinusCaptchaMinusSolution = val
}

type FormPostBadRequest Response

func (*FormPostBadRequest) formPostRes() {}

type FormPostInternalServerError Response

func (*FormPostInternalServerError) formPostRes() {}

type FormPostOK Response

func (*FormPostOK) formPostRes() {}

type FormPostUnprocessableEntity Response

func (*FormPostUnprocessableEntity) formPostRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Response
type Response struct {
	Message string  `json:"message"`
	Success OptBool `json:"success"`
}

// GetMessage returns the value of Message.
func (s *Response) GetMessage() string {
	return s.Message
}

// GetSuccess returns the value of Success.
func (s *Response) GetSuccess() OptBool {
	return s.Success
}

// SetMessage sets the value of Message.
func (s *Response) SetMessage(val string) {
	s.Message = val
}

// SetSuccess sets the value of Success.
func (s *Response) SetSuccess(val OptBool) {
	s.Success = val
}

// ResponseStatusCode wraps Response with StatusCode.
type ResponseStatusCode struct {
	StatusCode int
	Response   Response
}

// GetStatusCode returns the value of StatusCode.
func (s *ResponseStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ResponseStatusCode) GetResponse() Response {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ResponseStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ResponseStatusCode) SetResponse(val Response) {
	s.Response = val
}
